# Generated by Django 2.2.6 on 2021-04-16 09:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminProfiles',
            fields=[
                ('user_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('profile_image', models.TextField(blank=True, null=True)),
                ('profile_id', models.IntegerField(blank=True, null=True)),
                ('profile_tip', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admin_profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutoPopulate',
            fields=[
                ('vehicle_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=5)),
                ('make', models.CharField(max_length=36)),
                ('model', models.CharField(max_length=36)),
                ('color', models.CharField(max_length=36)),
            ],
            options={
                'db_table': 'auto_populate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryMenu',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=56)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'category_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CiSessions',
            fields=[
                ('session_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('ip_address', models.CharField(max_length=45)),
                ('user_agent', models.CharField(max_length=120)),
                ('last_activity', models.PositiveIntegerField()),
                ('user_data', models.TextField()),
            ],
            options={
                'db_table': 'ci_sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerProfiles',
            fields=[
                ('user_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('street_address', models.CharField(max_length=60)),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(max_length=50)),
                ('zip', models.CharField(max_length=10)),
                ('profile_image', models.TextField(blank=True, null=True)),
                ('profile_id', models.IntegerField(blank=True, null=True)),
                ('profile_tip', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customer_profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUploaderTable',
            fields=[
                ('user_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('images_data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'custom_uploader_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeniedAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(db_column='IP_address', max_length=45)),
                ('time', models.IntegerField()),
                ('reason_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'denied_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Egitim',
            fields=[
                ('egitimid', models.IntegerField(primary_key=True, serialize=False)),
                ('egitimadi', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'egitim',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HakemKademeleri',
            fields=[
                ('hakemkademeid', models.AutoField(primary_key=True, serialize=False)),
                ('hakemkademeadi', models.CharField(max_length=120)),
            ],
            options={
                'db_table': 'hakem_kademeleri',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Iller',
            fields=[
                ('ilid', models.IntegerField(primary_key=True, serialize=False)),
                ('iladi', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'iller',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IpsOnHold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(db_column='IP_address', max_length=45)),
                ('time', models.IntegerField()),
            ],
            options={
                'db_table': 'ips_on_hold',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KanGruplari',
            fields=[
                ('kangrubu', models.CharField(max_length=5, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'kan_gruplari',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kategoriler',
            fields=[
                ('kategoriid', models.IntegerField(primary_key=True, serialize=False)),
                ('kategoriadi', models.CharField(blank=True, max_length=20, null=True)),
                ('erkek', models.IntegerField(blank=True, null=True)),
                ('bayan', models.IntegerField(blank=True, null=True)),
                ('sayi', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kategoriler',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kulupler',
            fields=[
                ('kulupid', models.AutoField(primary_key=True, serialize=False)),
                ('kulupadi', models.CharField(max_length=120)),
                ('kurulustarihi', models.DateField(blank=True, null=True)),
                ('renk', models.CharField(blank=True, max_length=120, null=True)),
                ('aktif', models.IntegerField()),
                ('adres1', models.CharField(blank=True, max_length=400, null=True)),
                ('adres2', models.CharField(blank=True, max_length=400, null=True)),
                ('telefon', models.CharField(blank=True, max_length=120, null=True)),
                ('ceptel', models.CharField(blank=True, max_length=120, null=True)),
                ('kulupno', models.CharField(max_length=20)),
                ('faks', models.CharField(blank=True, max_length=120, null=True)),
                ('eposta', models.CharField(blank=True, max_length=120, null=True)),
                ('bankahesapno', models.CharField(blank=True, max_length=120, null=True)),
                ('webadresi', models.CharField(blank=True, max_length=120, null=True)),
                ('vd', models.CharField(blank=True, max_length=120, null=True)),
                ('vdno', models.CharField(blank=True, max_length=120, null=True)),
                ('yerlesim', models.CharField(blank=True, max_length=200, null=True)),
                ('tesciltarihi', models.DateField(blank=True, null=True)),
                ('aciklama', models.CharField(blank=True, max_length=800, null=True)),
                ('rec_version', models.IntegerField(blank=True, null=True)),
                ('instime', models.DateTimeField(blank=True, null=True)),
                ('updtime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kulupler',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KulupTmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adi', models.CharField(blank=True, max_length=200, null=True)),
                ('turadi', models.CharField(blank=True, max_length=20, null=True)),
                ('turid', models.IntegerField(blank=True, null=True)),
                ('tesciltarihi', models.DateField(blank=True, null=True)),
                ('telefon', models.CharField(blank=True, max_length=20, null=True)),
                ('iladi', models.CharField(blank=True, max_length=60, null=True)),
                ('ilid', models.IntegerField(blank=True, null=True)),
                ('kulupno', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'kulup_tmp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KulupTurleri',
            fields=[
                ('kulupturid', models.AutoField(primary_key=True, serialize=False)),
                ('kulupturadi', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'kulup_turleri',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginErrors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username_or_email', models.CharField(max_length=255)),
                ('ip_address', models.CharField(db_column='IP_address', max_length=45)),
                ('time', models.IntegerField()),
            ],
            options={
                'db_table': 'login_errors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Malzemeler',
            fields=[
                ('malzemeid', models.AutoField(primary_key=True, serialize=False)),
                ('malzemeadi', models.CharField(blank=True, max_length=250, null=True)),
                ('aciklama', models.CharField(blank=True, max_length=400, null=True)),
                ('kategori', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'malzemeler',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MalzHareket',
            fields=[
                ('malzhareketid', models.AutoField(primary_key=True, serialize=False)),
                ('tarih', models.DateField()),
                ('aciklama', models.CharField(blank=True, max_length=400, null=True)),
                ('teslimalan', models.CharField(blank=True, max_length=150, null=True)),
                ('miktar', models.DecimalField(decimal_places=0, max_digits=10)),
                ('rec_version', models.IntegerField(blank=True, null=True)),
                ('insuser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('instime', models.DateTimeField(blank=True, null=True)),
                ('upduser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('updtime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'malz_hareket',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ManagerProfiles',
            fields=[
                ('user_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('license_number', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=20)),
                ('profile_image', models.TextField(blank=True, null=True)),
                ('profile_id', models.IntegerField(blank=True, null=True)),
                ('profile_tip', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'manager_profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Raporlar',
            fields=[
                ('raporid', models.AutoField(primary_key=True, serialize=False)),
                ('auth_user_id', models.IntegerField(blank=True, null=True)),
                ('auth_profile_id', models.IntegerField(blank=True, null=True)),
                ('komut', models.CharField(blank=True, max_length=4000, null=True)),
                ('auth_level', models.IntegerField(blank=True, null=True)),
                ('sporcuid', models.IntegerField(blank=True, null=True)),
                ('zaman', models.DateTimeField(blank=True, null=True)),
                ('durum', models.IntegerField(blank=True, null=True)),
                ('prm1', models.IntegerField(blank=True, null=True)),
                ('prm2', models.IntegerField(blank=True, null=True)),
                ('prm3', models.IntegerField(blank=True, null=True)),
                ('prm4', models.IntegerField(blank=True, null=True)),
                ('prm5', models.IntegerField(blank=True, null=True)),
                ('sprm1', models.CharField(blank=True, max_length=400, null=True)),
                ('sprm2', models.CharField(blank=True, max_length=400, null=True)),
                ('sprm3', models.CharField(blank=True, max_length=400, null=True)),
                ('sprm4', models.CharField(blank=True, max_length=400, null=True)),
                ('sprm5', models.CharField(blank=True, max_length=400, null=True)),
                ('raporadi', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'raporlar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_mode', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'registration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sporcular',
            fields=[
                ('sporcuid', models.AutoField(primary_key=True, serialize=False)),
                ('adi', models.CharField(max_length=200)),
                ('soyadi', models.CharField(max_length=200)),
                ('eposta', models.CharField(blank=True, max_length=200, null=True)),
                ('anneadi', models.CharField(blank=True, max_length=200, null=True)),
                ('babaadi', models.CharField(blank=True, max_length=200, null=True)),
                ('tcno', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('uyrukid', models.CharField(blank=True, max_length=10, null=True)),
                ('dogumyeri', models.CharField(blank=True, max_length=200, null=True)),
                ('dogumtarihi', models.DateField(blank=True, null=True)),
                ('nufus_ilce', models.CharField(blank=True, max_length=100, null=True)),
                ('nufus_mahkoy', models.CharField(blank=True, max_length=120, null=True)),
                ('nufus_ciltno', models.CharField(blank=True, max_length=20, null=True)),
                ('nufus_ailesirano', models.CharField(blank=True, max_length=20, null=True)),
                ('nufus_sirano', models.CharField(blank=True, max_length=20, null=True)),
                ('kangrubu', models.CharField(blank=True, max_length=5, null=True)),
                ('meslek', models.CharField(blank=True, max_length=120, null=True)),
                ('kurum', models.CharField(blank=True, max_length=120, null=True)),
                ('is_unvani', models.CharField(blank=True, max_length=120, null=True)),
                ('is_adresi', models.CharField(blank=True, max_length=200, null=True)),
                ('evtel', models.CharField(blank=True, max_length=40, null=True)),
                ('istel', models.CharField(blank=True, max_length=40, null=True)),
                ('ceptel', models.CharField(blank=True, max_length=40, null=True)),
                ('ev_adresi', models.CharField(blank=True, max_length=400, null=True)),
                ('lisansno', models.CharField(blank=True, max_length=80, null=True)),
                ('lisanstarihi', models.DateField(blank=True, null=True)),
                ('vize', models.DateField(blank=True, null=True)),
                ('egitimid', models.PositiveIntegerField(blank=True, null=True)),
                ('bankahesapno', models.CharField(blank=True, max_length=120, null=True)),
                ('sporcu', models.IntegerField()),
                ('antrenor', models.IntegerField()),
                ('hakem', models.IntegerField(blank=True, null=True)),
                ('hakemvize', models.DateField(blank=True, null=True)),
                ('antrenorkademeid', models.PositiveIntegerField(blank=True, null=True)),
                ('antrenorvize', models.DateField(blank=True, null=True)),
                ('yerlesimyeri', models.CharField(blank=True, max_length=200, null=True)),
                ('rec_version', models.IntegerField()),
                ('resim', models.CharField(blank=True, max_length=800, null=True)),
                ('insuser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('instime', models.DateTimeField(blank=True, null=True)),
                ('upsuser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('updtime', models.DateTimeField(blank=True, null=True)),
                ('hakemvizetipi', models.PositiveIntegerField(blank=True, null=True)),
                ('mezunokul', models.CharField(blank=True, max_length=200, null=True)),
                ('fedkayitno', models.PositiveIntegerField(blank=True, null=True)),
                ('ayakkabi', models.CharField(blank=True, max_length=120, null=True)),
                ('esofman', models.CharField(blank=True, max_length=120, null=True)),
                ('tshirt', models.CharField(blank=True, max_length=120, null=True)),
                ('raket', models.CharField(blank=True, max_length=120, null=True)),
                ('cinsiyet', models.IntegerField(blank=True, null=True)),
                ('yerlesim_ilid', models.IntegerField(blank=True, null=True)),
                ('urlpart', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'sporcular',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SporcuPuanlari',
            fields=[
                ('sporcupuanid', models.AutoField(primary_key=True, serialize=False)),
                ('sira', models.IntegerField(blank=True, null=True)),
                ('puan', models.IntegerField(blank=True, null=True)),
                ('siragrup', models.IntegerField()),
            ],
            options={
                'db_table': 'sporcu_puanlari',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TempRegistrationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_id', models.PositiveIntegerField()),
                ('reg_time', models.IntegerField()),
                ('user_name', models.CharField(max_length=12)),
                ('user_pass', models.TextField()),
                ('user_salt', models.CharField(max_length=32)),
                ('user_email', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('street_address', models.CharField(max_length=60)),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(max_length=50)),
                ('zip', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'temp_registration_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TmpSporcular',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sporcuid', models.PositiveIntegerField()),
                ('adi', models.CharField(max_length=200)),
                ('soyadi', models.CharField(max_length=200)),
                ('anneadi', models.CharField(blank=True, max_length=200, null=True)),
                ('babaadi', models.CharField(blank=True, max_length=200, null=True)),
                ('tcno', models.CharField(blank=True, max_length=11, null=True)),
                ('uyrukid', models.CharField(blank=True, max_length=10, null=True)),
                ('dogumyeri', models.CharField(blank=True, max_length=200, null=True)),
                ('dogumtarihi', models.DateField(blank=True, null=True)),
                ('nufus_ilid', models.IntegerField(blank=True, null=True)),
                ('nufus_ilce', models.CharField(blank=True, max_length=100, null=True)),
                ('nufus_mahkoy', models.CharField(blank=True, max_length=120, null=True)),
                ('nufus_ciltno', models.CharField(blank=True, max_length=20, null=True)),
                ('nufus_ailesirano', models.CharField(blank=True, max_length=20, null=True)),
                ('nufus_sirano', models.CharField(blank=True, max_length=20, null=True)),
                ('kangrubu', models.CharField(blank=True, max_length=5, null=True)),
                ('meslek', models.CharField(blank=True, max_length=120, null=True)),
                ('kurum', models.CharField(blank=True, max_length=120, null=True)),
                ('is_unvani', models.CharField(blank=True, max_length=120, null=True)),
                ('is_adresi', models.CharField(blank=True, max_length=200, null=True)),
                ('evtel', models.CharField(blank=True, max_length=40, null=True)),
                ('istel', models.CharField(blank=True, max_length=40, null=True)),
                ('ceptel', models.CharField(blank=True, max_length=40, null=True)),
                ('ev_adresi', models.CharField(blank=True, max_length=400, null=True)),
                ('eposta', models.CharField(blank=True, max_length=200, null=True)),
                ('lisansno', models.CharField(blank=True, max_length=80, null=True)),
                ('antrenorid', models.PositiveIntegerField(blank=True, null=True)),
                ('lisanstarihi', models.DateField(blank=True, null=True)),
                ('vize', models.DateField(blank=True, null=True)),
                ('egitimid', models.PositiveIntegerField(blank=True, null=True)),
                ('bankahesapno', models.CharField(blank=True, max_length=120, null=True)),
                ('sporcu', models.IntegerField()),
                ('antrenor', models.IntegerField()),
                ('yerlesimyeri', models.CharField(blank=True, max_length=200, null=True)),
                ('rec_version', models.IntegerField()),
                ('resim', models.CharField(max_length=800)),
                ('insuser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('instime', models.DateTimeField(blank=True, null=True)),
                ('upsuser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('updtime', models.DateTimeField(blank=True, null=True)),
                ('hakemkademeid', models.PositiveIntegerField(blank=True, null=True)),
                ('kulupid', models.PositiveIntegerField(blank=True, null=True)),
                ('hakem', models.IntegerField(blank=True, null=True)),
                ('hakemvize', models.DateField(blank=True, null=True)),
                ('antrenorkademeid', models.PositiveIntegerField(blank=True, null=True)),
                ('antrenorvize', models.DateField(blank=True, null=True)),
                ('hakemvizetipi', models.PositiveIntegerField(blank=True, null=True)),
                ('user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('mezunokul', models.CharField(blank=True, max_length=200, null=True)),
                ('fedkayitno', models.PositiveIntegerField(blank=True, null=True)),
                ('ayakkabi', models.CharField(blank=True, max_length=120, null=True)),
                ('esofman', models.CharField(blank=True, max_length=120, null=True)),
                ('tshirt', models.CharField(blank=True, max_length=120, null=True)),
                ('raket', models.CharField(blank=True, max_length=120, null=True)),
                ('antrenorid2', models.PositiveIntegerField(blank=True, null=True)),
                ('cinsiyet', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tmp_sporcular',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TurnDurumKodlari',
            fields=[
                ('durumid', models.IntegerField(primary_key=True, serialize=False)),
                ('durumadi', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'turn_durum_kodlari',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TurnHakemleri',
            fields=[
                ('turnhakemid', models.AutoField(primary_key=True, serialize=False)),
                ('insuser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('instime', models.DateTimeField(blank=True, null=True)),
                ('upduser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('updtime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'turn_hakemleri',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TurnKategorileri',
            fields=[
                ('turnkategoriid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'turn_kategorileri',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TurnKulupleri',
            fields=[
                ('turnkulupid', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'turn_kulupleri',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TurnSporcuAntrenorleri',
            fields=[
                ('turnsporcuantrenorid', models.AutoField(primary_key=True, serialize=False)),
                ('sira', models.IntegerField()),
            ],
            options={
                'db_table': 'turn_sporcu_antrenorleri',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TurnSporculari',
            fields=[
                ('turnsporcuid', models.AutoField(primary_key=True, serialize=False)),
                ('antrenorid', models.IntegerField(blank=True, null=True)),
                ('kulupid', models.IntegerField(blank=True, null=True)),
                ('insuser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('instime', models.DateTimeField(blank=True, null=True)),
                ('upduser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('updtime', models.DateTimeField(blank=True, null=True)),
                ('sira', models.IntegerField(blank=True, null=True)),
                ('grupid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'turn_sporculari',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Turnuvalar',
            fields=[
                ('turnuvaid', models.AutoField(primary_key=True, serialize=False)),
                ('turnuvaadi', models.CharField(blank=True, max_length=400, null=True)),
                ('basltarihi', models.DateField()),
                ('bitistarihi', models.DateField()),
                ('durumid', models.IntegerField(blank=True, null=True)),
                ('aciklama', models.CharField(blank=True, max_length=20, null=True)),
                ('rec_version', models.IntegerField(blank=True, null=True)),
                ('insuser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('instime', models.DateTimeField(blank=True, null=True)),
                ('upsuser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('updtime', models.DateTimeField(blank=True, null=True)),
                ('basvurubasltarihi', models.DateField()),
                ('basvurubitistarihi', models.DateField()),
                ('mintarih', models.DateField(blank=True, null=True)),
                ('maxtarih', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'turnuvalar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsernameOrEmailOnHold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username_or_email', models.CharField(max_length=255)),
                ('time', models.IntegerField()),
            ],
            options={
                'db_table': 'username_or_email_on_hold',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=12, unique=True)),
                ('user_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('user_pass', models.CharField(max_length=60)),
                ('user_salt', models.CharField(max_length=32)),
                ('user_last_login', models.IntegerField(blank=True, null=True)),
                ('user_login_time', models.IntegerField(blank=True, null=True)),
                ('user_session_id', models.CharField(blank=True, max_length=40, null=True)),
                ('user_date', models.IntegerField()),
                ('user_modified', models.IntegerField()),
                ('user_agent_string', models.CharField(blank=True, max_length=32, null=True)),
                ('user_level', models.PositiveIntegerField()),
                ('user_banned', models.CharField(max_length=1)),
                ('passwd_recovery_code', models.CharField(blank=True, max_length=60, null=True)),
                ('passwd_recovery_date', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserYetkiKodlari',
            fields=[
                ('useryetkikodu', models.CharField(max_length=21, primary_key=True, serialize=False)),
                ('useryetkiadi', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'user_yetki_kodlari',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserYetkileri',
            fields=[
                ('useryetkiid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'user_yetkileri',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vizeler',
            fields=[
                ('vizeid', models.AutoField(primary_key=True, serialize=False)),
                ('belgetarihi', models.DateField(blank=True, null=True)),
                ('gecerliliktarihi', models.DateField()),
                ('aciklama', models.CharField(blank=True, max_length=200, null=True)),
                ('upduser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('updtime', models.DateTimeField(blank=True, null=True)),
                ('insuser_id', models.PositiveIntegerField(blank=True, null=True)),
                ('instime', models.DateTimeField(blank=True, null=True)),
                ('vizetipi', models.IntegerField()),
                ('rec_version', models.IntegerField()),
                ('seviye', models.IntegerField()),
                ('kayittipi', models.IntegerField()),
            ],
            options={
                'db_table': 'vizeler',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Abirim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, null=True, verbose_name='İsim')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AbirimParametre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=120, null=True, verbose_name='Başlık')),
                ('type', models.CharField(choices=[('date', 'Tarih'), ('string', 'Metin'), ('number', 'Sayi'), ('year', 'Yil')], default='string', max_length=128, verbose_name='Türü ')),
                ('birim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.Abirim', verbose_name='Birim')),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'YURT İÇİ FAALİYETLERİ'), (1, 'YURT DIŞI FAALİYETLERİ'), (2, 'EGİTİM FAALİYETLERİ'), (3, 'KAMP FAALİYETLERİ')], db_column='Type')),
                ('creationDate', models.DateTimeField(auto_now_add=True, db_column='creationDate', null=True)),
                ('operationDate', models.DateTimeField(auto_now_add=True, db_column='operationDate', null=True)),
                ('startDate', models.DateTimeField(blank=True, db_column='startDate', null=True)),
                ('finishDate', models.DateTimeField(blank=True, db_column='finishDate', null=True)),
                ('name', models.CharField(max_length=255)),
                ('eventPlace', models.CharField(blank=True, db_column='eventPlace', max_length=45, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Adosya',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sirano', models.IntegerField(blank=True, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Aevrak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('oldpk', models.IntegerField(blank=True, null=True)),
                ('iban', models.CharField(blank=True, max_length=120, null=True, verbose_name='İban Adresi')),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, null=True, verbose_name='Branş Adı')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('kategoriid', models.IntegerField(primary_key=True, serialize=False)),
                ('kategoriadi', models.CharField(blank=True, max_length=20, null=True)),
                ('erkek', models.IntegerField(blank=True, null=True)),
                ('bayan', models.IntegerField(blank=True, null=True)),
                ('sayi', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('forWhichClazz', models.CharField(max_length=255)),
                ('branch', models.CharField(blank=True, choices=[('BADMİNTON', 'BADMİNTON')], max_length=128, null=True, verbose_name='Seçiniz')),
                ('isFirst', models.BooleanField(blank=True, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.CategoryItem')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Şehir')),
            ],
        ),
        migrations.CreateModel(
            name='ClubRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Kulüp Üye Rolü')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('iban', models.CharField(blank=True, max_length=120, null=True, verbose_name='İban Adresi')),
                ('oldpk', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoachApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Kayıt Durumu')),
                ('dekont', models.FileField(blank=True, null=True, upload_to='dekont/', verbose_name='coachApplication ')),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.Coach')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneHome', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneJop', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('addressHome', models.TextField(blank=True, null=True, verbose_name='AdresHome')),
                ('addressJop', models.TextField(blank=True, null=True, verbose_name='AdresJop')),
                ('town', models.CharField(blank=True, max_length=120, null=True)),
                ('neighborhood', models.CharField(blank=True, max_length=120, null=True)),
                ('city', models.ForeignKey(blank=True, db_column='city', null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.City', verbose_name='İl')),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compType', models.IntegerField(blank=True, choices=[(0, 'Üniversiteler Arası'), (1, 'Okullar Arası'), (2, 'Ferdi')], db_column='compType', null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True, db_column='creationDate', null=True)),
                ('operationDate', models.DateTimeField(auto_now_add=True, db_column='operationDate', null=True)),
                ('finishDate', models.DateTimeField(blank=True, db_column='finishDate', null=True)),
                ('startDate', models.DateTimeField(blank=True, db_column='startDate', null=True)),
                ('registerStartDate', models.DateTimeField(blank=True, db_column='registerStartDate', null=True)),
                ('registerFinishDate', models.DateTimeField(blank=True, db_column='registerFinishDate', null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('eventPlace', models.CharField(blank=True, db_column='eventPlace', max_length=45, null=True)),
                ('eskimi', models.BooleanField(default=True)),
                ('explanation', models.CharField(blank=True, max_length=20, null=True)),
                ('compGeneralType', models.IntegerField(blank=True, choices=[(0, 'Türkiye'), (1, 'Dünya'), (2, 'Olimpiyat'), (3, 'Avrupa')], db_column='compGeneralType', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionAges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Ülke')),
            ],
        ),
        migrations.CreateModel(
            name='DirectoryCommission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Kurul Adı')),
            ],
        ),
        migrations.CreateModel(
            name='DirectoryMemberRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Üye Rolü')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='document/', verbose_name='Document')),
                ('name', models.CharField(max_length=1000)),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('iban', models.CharField(blank=True, max_length=120, null=True, verbose_name='İban Adresi')),
                ('oldpk', models.IntegerField(blank=True, null=True)),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.Communication')),
            ],
        ),
        migrations.CreateModel(
            name='JudgeApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Kayıt Durumu')),
                ('dekont', models.FileField(blank=True, null=True, upload_to='dekont/', verbose_name='judgeApplication ')),
                ('judge', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.Judge')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ayakkabi', models.CharField(blank=True, max_length=120, null=True)),
                ('esofman', models.CharField(blank=True, max_length=120, null=True)),
                ('tshirt', models.CharField(blank=True, max_length=120, null=True)),
                ('raket', models.CharField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nationnality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Penal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='Penal/', verbose_name='Penal')),
                ('penal', models.CharField(max_length=1000)),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tc', models.CharField(blank=True, max_length=120, null=True)),
                ('height', models.CharField(blank=True, max_length=120, null=True)),
                ('weight', models.CharField(blank=True, max_length=120, null=True)),
                ('birthplace', models.CharField(blank=True, max_length=120, null=True, verbose_name='Doğum Yeri')),
                ('motherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Anne Adı')),
                ('fatherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Baba Adı')),
                ('profileImage', models.ImageField(blank=True, default='profile/user.png', null=True, upload_to='profile/', verbose_name='Profil Resmi')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('bloodType', models.CharField(blank=True, choices=[('AB(+)', 'AB Rh+'), ('AB(-)', 'AB Rh-'), ('A(+)', 'A Rh+'), ('A(-)', 'A Rh-'), ('B(+)', 'B Rh+'), ('B(-)', 'B Rh-'), ('0(+)', '0 Rh+'), ('0(-)', '0 Rh-')], max_length=128, null=True, verbose_name='Kan Grubu')),
                ('gender', models.IntegerField(blank=True, choices=[(1, 'Erkek'), (2, 'Kadın')], null=True)),
                ('uyrukid', models.CharField(blank=True, max_length=10, null=True)),
                ('nufus_ailesirano', models.CharField(blank=True, max_length=20, null=True)),
                ('nufus_sirano', models.CharField(blank=True, max_length=20, null=True)),
                ('nufus_ciltno', models.CharField(blank=True, max_length=20, null=True)),
                ('meslek', models.CharField(blank=True, max_length=120, null=True)),
                ('kurum', models.CharField(blank=True, max_length=120, null=True)),
                ('is_unvani', models.CharField(blank=True, max_length=120, null=True)),
                ('education', models.IntegerField(blank=True, choices=[(10, 'İlkokul'), (15, 'Lise'), (25, 'Üniversite(Lisans)'), (30, 'Yüksek Lisans'), (20, 'Yüksek Okul')], null=True)),
                ('mezunokul', models.CharField(blank=True, max_length=200, null=True)),
                ('document', models.ManyToManyField(to='sbs.Document')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.Material')),
                ('penal', models.ManyToManyField(to='sbs.Penal')),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('category', models.CharField(blank=True, choices=[('RAKET', 'RAKET'), ('TOPLAR', 'TOPLAR'), ('AYAKKABI', 'AYAKKABI'), ('CANTA', 'ÇANTA'), ('AKSESUAR', 'AKSESUAR'), ('GRİP', 'GRİP'), ('KORDAJ', 'KORDAJ'), ('EKİPMAN', 'EKİPMAN'), ('KIYAFET', 'KIYAFET'), ('TISORT', 'TISORT'), ('KITAP', 'KİTAP')], max_length=128, null=True, verbose_name='category')),
                ('stock', models.IntegerField(blank=True, null=True)),
                ('suppeliers', models.CharField(blank=True, max_length=120, null=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Punishment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('startDate', models.DateTimeField()),
                ('expireDate', models.DateTimeField()),
                ('durationDay', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=400, null=True)),
                ('isActiv', models.BooleanField(blank=True, default=True, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('reaply', models.CharField(blank=True, max_length=400, null=True)),
                ('count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SimpleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoryName', models.CharField(blank=True, max_length=255, null=True)),
                ('compCategoryCompleted', models.BooleanField(blank=True, null=True)),
                ('compOrder', models.IntegerField(blank=True, null=True)),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('isDuilian', models.BooleanField(blank=True, null=True)),
                ('kobilId', models.IntegerField(blank=True, null=True)),
                ('operationDate', models.DateTimeField(auto_now_add=True)),
                ('playersOrdered', models.BooleanField(blank=True, null=True)),
                ('recordCompleted', models.BooleanField(blank=True, null=True)),
                ('competition', models.IntegerField(blank=True, null=True)),
                ('area', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SportClubUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('dataAccessControl', models.BooleanField(blank=True, default=False, null=True)),
                ('oldpk', models.IntegerField(blank=True, null=True)),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.Communication')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.Person')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.ClubRole', verbose_name='Üye Rolü')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('kobilid', models.IntegerField(db_column='kobilId')),
                ('operationdate', models.DateTimeField(blank=True, db_column='operationDate', null=True)),
                ('weight', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VisaSeminar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=1000)),
                ('startDate', models.DateTimeField()),
                ('finishDate', models.DateTimeField()),
                ('location', models.CharField(max_length=1000)),
                ('branch', models.CharField(choices=[('BADMİNTON', 'BADMİNTON')], max_length=128, verbose_name='Branş')),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Kayıt Durumu')),
                ('forWhichClazz', models.CharField(max_length=255)),
                ('application', models.BooleanField(blank=True, choices=[(True, 'Açık'), (False, 'Kapalı')], default=False, null=True)),
                ('appStartDate', models.DateTimeField(blank=True, null=True)),
                ('appFinishDate', models.DateTimeField(blank=True, null=True)),
                ('year', models.CharField(blank=True, max_length=20, null=True)),
                ('coach', models.ManyToManyField(to='sbs.Coach')),
                ('coachApplication', models.ManyToManyField(related_name='coachApplication', to='sbs.CoachApplication')),
                ('judgeApplication', models.ManyToManyField(related_name='JudgeApplication', to='sbs.JudgeApplication')),
                ('referee', models.ManyToManyField(to='sbs.Judge')),
            ],
        ),
        migrations.CreateModel(
            name='SportsClub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('shortName', models.CharField(blank=True, max_length=120, null=True)),
                ('foundingDate', models.CharField(blank=True, max_length=120, null=True)),
                ('clubMail', models.CharField(blank=True, max_length=120, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='club/', verbose_name='Kulüp Logo')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('isFormal', models.BooleanField(choices=[(True, 'Spor Kulubü'), (False, 'Diger(Özel Salon-Dojo-Sportif Dernek)')], default=True)),
                ('dataAccessControl', models.BooleanField(blank=True, default=False, null=True)),
                ('password', models.CharField(blank=True, max_length=120, null=True)),
                ('username', models.CharField(blank=True, max_length=120, null=True)),
                ('isRegister', models.BooleanField(default=False)),
                ('petition', models.FileField(blank=True, null=True, upload_to='club/', verbose_name='Yetki Belgesi ')),
                ('clubUser', models.ManyToManyField(to='sbs.SportClubUser')),
                ('coachs', models.ManyToManyField(to='sbs.Coach')),
                ('communication', models.OneToOneField(blank=True, db_column='communication', null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.Communication')),
            ],
        ),
        migrations.CreateModel(
            name='SandaAthlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('athlete', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.Athlete')),
                ('competition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.Competition')),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceReferee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('iban', models.CharField(max_length=120, verbose_name='İban Adresi')),
                ('tc', models.CharField(blank=True, max_length=120, null=True)),
                ('height', models.CharField(blank=True, max_length=120, null=True)),
                ('weight', models.CharField(blank=True, max_length=120, null=True)),
                ('birthplace', models.CharField(blank=True, max_length=120, null=True, verbose_name='Doğum Yeri')),
                ('motherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Anne Adı')),
                ('fatherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Baba Adı')),
                ('profileImage', models.ImageField(upload_to='profile/', verbose_name='Profil Resmi')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('bloodType', models.CharField(blank=True, choices=[('AB Rh+', 'AB Rh+'), ('AB Rh-', 'AB Rh-'), ('A Rh+', 'A Rh+'), ('A Rh-', 'A Rh-'), ('B Rh+', 'B Rh+'), ('B Rh-', 'B Rh-'), ('AB Rh+', '0 Rh+'), ('AB Rh+', '0 Rh-')], max_length=128, null=True, verbose_name='Kan Grubu')),
                ('gender', models.CharField(choices=[('Erkek', 'Erkek'), ('Kadın', 'Kadın')], default='Erkek', max_length=128, verbose_name='Cinsiyeti')),
                ('postalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('kademe_startDate', models.DateField(verbose_name='Kademe başlangıç Tarihi')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. ')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.City', verbose_name='İl')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.Country', verbose_name='Ülke')),
                ('kademe_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.CategoryItem')),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceCoach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('iban', models.CharField(max_length=120, verbose_name='İban Adresi')),
                ('tc', models.CharField(blank=True, max_length=120, null=True)),
                ('height', models.CharField(blank=True, max_length=120, null=True)),
                ('weight', models.CharField(blank=True, max_length=120, null=True)),
                ('birthplace', models.CharField(blank=True, max_length=120, null=True, verbose_name='Doğum Yeri')),
                ('motherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Anne Adı')),
                ('fatherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Baba Adı')),
                ('profileImage', models.ImageField(upload_to='profile/', verbose_name='Profil Resmi')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('bloodType', models.CharField(blank=True, choices=[('AB Rh+', 'AB Rh+'), ('AB Rh-', 'AB Rh-'), ('A Rh+', 'A Rh+'), ('A Rh-', 'A Rh-'), ('B Rh+', 'B Rh+'), ('B Rh-', 'B Rh-'), ('AB Rh+', '0 Rh+'), ('AB Rh+', '0 Rh-')], max_length=128, null=True, verbose_name='Kan Grubu')),
                ('gender', models.CharField(choices=[('Erkek', 'Erkek'), ('Kadın', 'Kadın')], default='Erkek', max_length=128, verbose_name='Cinsiyeti')),
                ('postalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. ')),
                ('kademe_startDate', models.DateField(blank=True, null=True, verbose_name='Başlangıç Tarihi ')),
                ('kademe_belge', models.FileField(upload_to='dekont/', verbose_name='Belge')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.City', verbose_name='İl')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.Country', verbose_name='Ülke')),
                ('kademe_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.CategoryItem')),
            ],
        ),
        migrations.CreateModel(
            name='PreRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('tc', models.CharField(blank=True, max_length=120, null=True)),
                ('height', models.CharField(blank=True, max_length=120, null=True)),
                ('weight', models.CharField(blank=True, max_length=120, null=True)),
                ('birthplace', models.CharField(blank=True, max_length=120, null=True, verbose_name='Doğum Yeri')),
                ('motherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Anne Adı')),
                ('fatherName', models.CharField(blank=True, max_length=120, null=True, verbose_name='Baba Adı')),
                ('profileImage', models.ImageField(upload_to='profile/', verbose_name='Profil Resmi')),
                ('birthDate', models.DateField(blank=True, null=True, verbose_name='Doğum Tarihi')),
                ('bloodType', models.CharField(blank=True, choices=[('AB Rh+', 'AB Rh+'), ('AB Rh-', 'AB Rh-'), ('A Rh+', 'A Rh+'), ('A Rh-', 'A Rh-'), ('B Rh+', 'B Rh+'), ('B Rh-', 'B Rh-'), ('AB Rh+', '0 Rh+'), ('AB Rh+', '0 Rh-')], max_length=128, null=True, verbose_name='Kan Grubu')),
                ('gender', models.CharField(choices=[('Erkek', 'Erkek'), ('Kadın', 'Kadın')], default='Erkek', max_length=128, verbose_name='Cinsiyeti')),
                ('postalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('phoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('shortName', models.CharField(blank=True, max_length=120, null=True)),
                ('foundingDate', models.DateField(blank=True, max_length=120, null=True, verbose_name='Kuruluş Tarihi')),
                ('clubMail', models.CharField(blank=True, max_length=120, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='club/', verbose_name='Kulüp Logo')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('isFormal', models.BooleanField(choices=[(True, 'Spor Kulubü'), (False, 'Diger(Özel Salon-Dojo-Sportif Dernek)')], default=True)),
                ('clubpostalCode', models.CharField(blank=True, max_length=120, null=True)),
                ('clubphoneNumber', models.CharField(blank=True, max_length=120, null=True)),
                ('clubphoneNumber2', models.CharField(blank=True, max_length=120, null=True)),
                ('clubaddress', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('isCoach', models.BooleanField(choices=[(True, 'Evet '), (False, 'Hayır')], default=False)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. ')),
                ('dekont', models.FileField(blank=True, null=True, upload_to='dekont/', verbose_name='Dekont ')),
                ('petition', models.FileField(upload_to='dekont/', verbose_name='Antrenör Yetki Belgesi  ')),
                ('kademe_definition', models.CharField(blank=True, max_length=150, null=True)),
                ('kademe_startDate', models.DateField(blank=True, null=True, verbose_name='Başlangıç Tarihi ')),
                ('kademe_belge', models.FileField(blank=True, null=True, upload_to='dekont/', verbose_name='Belge')),
                ('iban', models.CharField(blank=True, max_length=120, null=True, verbose_name='İban Adresi')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_city', to='sbs.City', verbose_name='İl')),
                ('clubcity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.City', verbose_name='İl')),
                ('clubcountry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.Country', verbose_name='Ülke')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_country', to='sbs.Country', verbose_name='Ülke')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.ClubRole', verbose_name='Üye Rolü')),
            ],
        ),
        migrations.CreateModel(
            name='MenuReferee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('sorting', models.IntegerField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.MenuReferee')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuDirectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('sorting', models.IntegerField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.MenuDirectory')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuCoach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('sorting', models.IntegerField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.MenuCoach')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuClubUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('sorting', models.IntegerField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.MenuClubUser')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuAthlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.MenuAthlete')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('sorting', models.IntegerField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.MenuAdmin')),
                ('permission', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True)),
                ('url', models.CharField(blank=True, max_length=120, null=True)),
                ('is_parent', models.BooleanField(default=True)),
                ('is_show', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, max_length=120, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.Menu')),
                ('permission', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MenuPermission', to='auth.Permission')),
            ],
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('subject', models.CharField(max_length=150, null=True)),
                ('ip', models.CharField(max_length=20, null=True)),
                ('user', models.ForeignKey(db_column='user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Üye Rolü')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('branch', models.CharField(blank=True, choices=[('BADMİNTON', 'BADMİNTON')], max_length=128, null=True, verbose_name='Branş')),
                ('isActive', models.BooleanField(default=False)),
                ('licenseNo', models.CharField(blank=True, max_length=255, null=True)),
                ('expireDate', models.DateField(blank=True, null=True)),
                ('startDate', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('lisansPhoto', models.FileField(blank=True, null=True, upload_to='lisans/', verbose_name='Lisans')),
                ('reddetwhy', models.CharField(blank=True, max_length=255, null=True)),
                ('isFerdi', models.BooleanField(default=False)),
                ('cityHeadShip', models.ForeignKey(blank=True, db_column='cityHeadShip', null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.City')),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='antrenor1', to='sbs.Coach')),
                ('coach2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='antrenor2', to='sbs.Coach')),
                ('sportsClub', models.ForeignKey(db_column='sportsClub', on_delete=django.db.models.deletion.CASCADE, to='sbs.SportsClub')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('levelType', models.CharField(choices=[('VISA', 'VISA'), ('GRADE', 'GRADE'), ('BELT', 'BELT')], max_length=128, verbose_name='Leveller')),
                ('branch', models.CharField(blank=True, choices=[('BADMİNTON', 'BADMİNTON')], max_length=128, null=True, verbose_name='Branş')),
                ('isActive', models.BooleanField(default=False)),
                ('startDate', models.DateField(blank=True, null=True)),
                ('expireDate', models.DateField(blank=True, null=True)),
                ('durationDay', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('dekont', models.FileField(blank=True, null=True, upload_to='dekont/', verbose_name='Belge ')),
                ('form', models.FileField(blank=True, null=True, upload_to='form/', verbose_name='Form ')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.City', verbose_name='İl')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.CategoryItem')),
            ],
        ),
        migrations.AddField(
            model_name='judge',
            name='grades',
            field=models.ManyToManyField(related_name='Judgegrades', to='sbs.Level'),
        ),
        migrations.AddField(
            model_name='judge',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.Person'),
        ),
        migrations.AddField(
            model_name='judge',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='judge',
            name='visa',
            field=models.ManyToManyField(related_name='Judgevisa', to='sbs.Level'),
        ),
        migrations.CreateModel(
            name='GrupForReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('centerreferee', models.CharField(blank=True, db_column='centerReferee', max_length=255, null=True)),
                ('compdoctor', models.CharField(blank=True, db_column='compDoctor', max_length=255, null=True)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('jurymemberfour', models.CharField(blank=True, db_column='juryMemberFour', max_length=255, null=True)),
                ('jurymemberone', models.CharField(blank=True, db_column='juryMemberOne', max_length=255, null=True)),
                ('jurymemberthree', models.CharField(blank=True, db_column='juryMemberThree', max_length=255, null=True)),
                ('jurymembertwo', models.CharField(blank=True, db_column='juryMemberTwo', max_length=255, null=True)),
                ('jurypresident', models.CharField(blank=True, db_column='juryPresident', max_length=255, null=True)),
                ('kobilid', models.IntegerField(db_column='kobilId')),
                ('marshallone', models.CharField(blank=True, db_column='marshallOne', max_length=255, null=True)),
                ('marshalltwo', models.CharField(blank=True, db_column='marshallTwo', max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('operationdate', models.DateTimeField(blank=True, db_column='operationDate', null=True)),
                ('refereeone', models.CharField(blank=True, db_column='refereeOne', max_length=255, null=True)),
                ('refereetwo', models.CharField(blank=True, db_column='refereeTwo', max_length=255, null=True)),
                ('speaker', models.CharField(blank=True, max_length=255, null=True)),
                ('techcontrollerone', models.CharField(blank=True, db_column='techControllerOne', max_length=255, null=True)),
                ('techcontrollertwo', models.CharField(blank=True, db_column='techControllerTwo', max_length=255, null=True)),
                ('timekeeper', models.CharField(blank=True, db_column='timeKeeper', max_length=255, null=True)),
                ('competition', models.ForeignKey(blank=True, db_column='competition', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.Competition')),
            ],
        ),
        migrations.CreateModel(
            name='DirectoryMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('oldpk', models.IntegerField(blank=True, null=True)),
                ('commission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.DirectoryCommission', verbose_name='Kurulu')),
                ('communication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.Communication')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.Person')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.DirectoryMemberRole', verbose_name='Üye Rolü')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('date', models.DateTimeField()),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('delivery', models.CharField(blank=True, max_length=300, null=True)),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.SportsClub', verbose_name='Emanet Kulup')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.Products', verbose_name='Emanet Malzeme')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionsAthlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('degree', models.IntegerField(default=0)),
                ('sira', models.IntegerField(blank=True, null=True)),
                ('grupid', models.IntegerField(blank=True, null=True)),
                ('athlete', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='athlete', to='sbs.Athlete')),
                ('athleteTwo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='athlete2', to='sbs.Athlete')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.Category')),
                ('club', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.SportsClub')),
                ('coach', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.Coach')),
                ('competition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.Competition')),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionCoach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('sira', models.IntegerField(blank=True, null=True)),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.Athlete')),
                ('coach', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.Coach')),
            ],
        ),
        migrations.AddField(
            model_name='competition',
            name='ages',
            field=models.ManyToManyField(to='sbs.CompetitionAges'),
        ),
        migrations.AddField(
            model_name='competition',
            name='categoryies',
            field=models.ManyToManyField(to='sbs.Category'),
        ),
        migrations.AddField(
            model_name='competition',
            name='judges',
            field=models.ManyToManyField(to='sbs.Judge'),
        ),
        migrations.CreateModel(
            name='CompCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('athletegroup', models.CharField(blank=True, db_column='athleteGroup', max_length=255, null=True)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('kobilid', models.IntegerField(db_column='kobilId')),
                ('operationdate', models.DateTimeField(blank=True, db_column='operationDate', null=True)),
                ('sex', models.IntegerField(blank=True, null=True)),
                ('startdate', models.CharField(blank=True, db_column='startDate', max_length=45, null=True)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('starttime', models.CharField(blank=True, db_column='startTime', max_length=45, null=True)),
                ('competition', models.ForeignKey(blank=True, db_column='competition', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.Competition')),
                ('grupforreport', models.ForeignKey(blank=True, db_column='grupForReport', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.GrupForReport')),
            ],
        ),
        migrations.CreateModel(
            name='CompAthlete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('operationdate', models.DateTimeField(blank=True, db_column='operationDate', null=True)),
                ('degree', models.IntegerField(default=0)),
                ('lotno', models.IntegerField(db_column='lotNo', default=0)),
                ('sessionno', models.IntegerField(db_column='sessionNo', default=0)),
                ('athlete', models.ForeignKey(blank=True, db_column='athlete', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.Athlete')),
                ('category', models.ForeignKey(blank=True, db_column='category', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.Category')),
                ('compcategory', models.ForeignKey(blank=True, db_column='compCategory', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.CompCategory')),
                ('competition', models.ForeignKey(blank=True, db_column='competition', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.Competition')),
            ],
        ),
        migrations.AddField(
            model_name='communication',
            name='country',
            field=models.ForeignKey(blank=True, db_column='country', null=True, on_delete=django.db.models.deletion.CASCADE, to='sbs.Country', verbose_name='Ülke'),
        ),
        migrations.AddField(
            model_name='coach',
            name='communication',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.Communication'),
        ),
        migrations.AddField(
            model_name='coach',
            name='grades',
            field=models.ManyToManyField(related_name='CoachGrades', to='sbs.Level'),
        ),
        migrations.AddField(
            model_name='coach',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sbs.Person'),
        ),
        migrations.AddField(
            model_name='coach',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coach',
            name='visa',
            field=models.ManyToManyField(related_name='CoachVisa', to='sbs.Level'),
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=1000)),
                ('project', models.CharField(choices=[('SPOR BİLGİ SİSTEMİ', 'SPOR BİLGİ SİSTEMİ'), ('MOBİL UYGULAMA', 'MOBİL UYGULAMA'), ('WEB SİTE', 'WEB SİTE')], max_length=128, verbose_name='Proje Seçiniz')),
                ('status', models.CharField(blank=True, choices=[('Onaylandı', 'Onaylandı'), ('İşlem Devam Ediliyor', 'İşlem Devam Ediliyor'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede'), ('Bitti', 'Bitti')], max_length=128, null=True, verbose_name='Kayıt Durumu')),
                ('definition', models.CharField(max_length=1000)),
                ('importanceSort', models.CharField(choices=[('ACİL', 'ACİL'), ('ÖNEMLİ', 'ÖNEMLİ'), ('AZ ÖNEMLİ', 'AZ ÖNEMLİ')], default='ACİL', max_length=128, verbose_name='Önem Durumu')),
                ('pay', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BeltExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('modificationDate', models.DateTimeField(auto_now=True)),
                ('examDate', models.DateField()),
                ('paymentType', models.CharField(choices=[('Banka', 'Banka'), ('Posta', 'Posta')], default='Banka', max_length=128, verbose_name='Ödeme Şekli')),
                ('dekont', models.FileField(upload_to='dekont/', verbose_name='Dekont ')),
                ('dekontDate', models.DateField(blank=True, null=True)),
                ('dekontDescription', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Onaylandı', 'Onaylandı'), ('Onaya Gönderildi', 'Onaya Gönderildi'), ('Reddedildi', 'Reddedildi'), ('Beklemede', 'Beklemede')], default='Beklemede', max_length=128, verbose_name='Onay Durumu')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('branch', models.CharField(choices=[('BADMİNTON', 'BADMİNTON')], max_length=128)),
                ('athletes', models.ManyToManyField(to='sbs.Athlete')),
                ('coachs', models.ManyToManyField(to='sbs.Coach')),
                ('sportClub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sbs.SportsClub')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='athlete',
            name='communication',
            field=models.OneToOneField(db_column='communication', on_delete=django.db.models.deletion.CASCADE, to='sbs.Communication'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='licenses',
            field=models.ManyToManyField(to='sbs.License'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='person',
            field=models.OneToOneField(db_column='person', on_delete=django.db.models.deletion.CASCADE, to='sbs.Person'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='user',
            field=models.OneToOneField(db_column='user', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Aklasor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120, verbose_name='Tanımı')),
                ('sirano', models.IntegerField(verbose_name='Sıra Numarası')),
                ('birim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.Abirim', verbose_name='Birim')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.CategoryItem', verbose_name='Konumu')),
            ],
        ),
        migrations.CreateModel(
            name='AdosyaParametre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDate', models.DateTimeField(auto_now_add=True)),
                ('operationDate', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(blank=True, max_length=120, null=True, verbose_name='value')),
                ('dosya', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.Adosya')),
                ('parametre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sbs.AbirimParametre')),
            ],
        ),
        migrations.AddField(
            model_name='adosya',
            name='evrak',
            field=models.ManyToManyField(to='sbs.Aevrak'),
        ),
        migrations.AddField(
            model_name='adosya',
            name='klasor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sbs.Aklasor'),
        ),
        migrations.CreateModel(
            name='ActiveGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='auth.Group', verbose_name='aktivGroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='aktivUser')),
            ],
        ),
    ]
